#!/usr/bin/env python
"""
Script para probar la extracci√≥n de ubicaci√≥n en consultas m√©dicas
"""

import re

def test_location_extraction(user_input: str):
    """Prueba la extracci√≥n de ubicaci√≥n con el mismo algoritmo del chatbot"""
    
    # Ubicaci√≥n por defecto
    location = "Espa√±a"
    
    # Detectar ubicaci√≥n - patrones mejorados
    location_patterns = [
        r"en\s+([A-Za-z√Ä-√ø\s]+?)(?:\s+centros?|\s+especialistas?|\s+cl√≠nicas?|\s+hospitales?|\s+centro)",
        r"busca\s+(?:centros?|especialistas?|cl√≠nicas?|hospitales?)\s+en\s+([A-Za-z√Ä-√ø\s]+)",
        r"centros?\s+en\s+([A-Za-z√Ä-√ø\s]+)",
        r"especialistas?\s+en\s+([A-Za-z√Ä-√ø\s]+)",
        r"cl√≠nicas?\s+en\s+([A-Za-z√Ä-√ø\s]+)",
        r"hospitales?\s+en\s+([A-Za-z√Ä-√ø\s]+)",
        r"([A-Za-z√Ä-√ø\s]+?)\s+centros?",
        r"([A-Za-z√Ä-√ø\s]+?)\s+especialistas?",
        r"([A-Za-z√Ä-√ø\s]+?)\s+hospitales?",
        r"([A-Za-z√Ä-√ø\s]+?)\s+cl√≠nicas?"
    ]
    
    for pattern in location_patterns:
        match = re.search(pattern, user_input, re.IGNORECASE)
        if match:
            location = match.group(1).strip()
            print(f"‚úÖ Patr√≥n '{pattern}' detect√≥: '{location}'")
            return location
    
    print(f"‚ùå No se detect√≥ ubicaci√≥n, usando por defecto: '{location}'")
    return location

# Probar diferentes inputs
test_inputs = [
    "busca centro en Valencia",
    "centros m√©dicos en Madrid",
    "especialistas en Barcelona",
    "cl√≠nicas en Sevilla",
    "hospitales en Bilbao",
    "busca otorrinos en Valencia",
    "centros de aud√≠fonos en Valencia",
    "Valencia centros m√©dicos",
    "Quiero encontrar centros en Valencia"
]

print("üß™ Probando extracci√≥n de ubicaci√≥n...\n")

for i, test_input in enumerate(test_inputs, 1):
    print(f"Test {i}: '{test_input}'")
    location = test_location_extraction(test_input)
    print(f"üìç Resultado: '{location}'\n") 